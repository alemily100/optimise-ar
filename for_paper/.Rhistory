scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(
name = expression(
"Probability of first baseline-adjusted \n Grade " >= 3 ~ " PRO-CTCAE score"
)
)+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(
name = expression(
"Probability of first baseline-adjusted Grade " >= 3 ~ " PRO-CTCAE score"
)
)+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(
name = expression(
"Probability of first baseline-adjusted" ~ "\n" ~
"Grade " >= 3 ~ " PRO-CTCAE score"
)
)+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(
name = expression(
"Probability of first baseline-adjusted \n Grade " >= 3 ~ " PRO-CTCAE score"
)
)+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(
name = bquote(
"Probability of first baseline-adjusted" ~ "\n" ~
"Grade" >= 3 ~ " PRO-CTCAE score"
)
)+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations")
source("functions_synthesise_data.R")
library(tidyverse)
library(lubridate)
library(ggsurvfit)
library(survival)
library(ggsurvfit)
library(gridExtra)
library(grid)
#library(tidycmprsk)
library(survival)
#import dummy data
ordinal_data <- read.csv("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations/dummy_ordinal.csv")[,-1]
#### FIGURE GENERATION
ordinal_data<-ordinal_data%>%group_by(id, toxicity)%>%mutate(base_adj = grade-grade[timepoint==0])
ordinal_data_available<-ordinal_data%>%filter(is.na(base_adj)==FALSE)
summary_df <- ordinal_data_available %>%
group_by(id) %>%
summarise(
time = if (any(base_adj == 3)) min(timepoint[base_adj == 3]) else max(timepoint),
event = as.integer(any(base_adj == 3))  # 1 if grade 3 occurred, 0 if censored
)
summary_df <- cbind(summary_df, ordinal_data%>%group_by(id)%>%dplyr::summarise(max(dose)))
colnames(summary_df)[5]<- "dose"
summary_df$dose<- as.factor(summary_df$dose)
levels(summary_df$dose) <- c("Dose 1", "Dose 2", "Dose 3")
fit<- survfit2(Surv(time,event) ~ dose, data=summary_df)
median_df <- survminer::surv_median(fit)%>%
dplyr::select(strata, median) %>%
rename(Dose = strata,
`Median time \n to event` = median)
median_df[,1]<-c("Dose 1", "Dose 2", "Dose 3")
tbl_grob <- tableGrob(median_df, rows = NULL, theme = ttheme_default(
core = list(fg_params = list(cex = 0.7)),
colhead = list(fg_params = list(cex = 0.8, fontface = "bold"))
))
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations/for_paper")
pdf("Figure1.pdf", width=10, height=6)
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(
name = bquote(
"Probability of first baseline-adjusted" ~ "\n" ~
"Grade" >= 3 ~ " PRO-CTCAE score"
)
)+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
dev.off()
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(
name = bquote(
"Probability of first baseline-adjusted Grade
" >= 3 ~ " PRO-CTCAE score"
)
)+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(as.list(expression(paste("Histogram of " , hat(mu)), "Bootstrap samples, Allianz")))+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(name = as.list(expression(paste("Histogram of " , hat(mu)), "Bootstrap samples, Allianz")))+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(
name = expression(
atop(
"Probability of first baseline-adjusted",
"Grade" >= 3 ~ " PRO-CTCAE score"
)
)
)+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations")
source("functions_synthesise_data.R")
library(tidyverse)
library(lubridate)
library(ggsurvfit)
library(survival)
library(ggsurvfit)
library(gridExtra)
library(grid)
#library(tidycmprsk)
library(survival)
#import dummy data
ordinal_data <- read.csv("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations/dummy_ordinal.csv")[,-1]
#### FIGURE GENERATION
ordinal_data<-ordinal_data%>%group_by(id, toxicity)%>%mutate(base_adj = grade-grade[timepoint==0])
ordinal_data_available<-ordinal_data%>%filter(is.na(base_adj)==FALSE)
summary_df <- ordinal_data_available %>%
group_by(id) %>%
summarise(
time = if (any(base_adj == 3)) min(timepoint[base_adj == 3]) else max(timepoint),
event = as.integer(any(base_adj == 3))  # 1 if grade 3 occurred, 0 if censored
)
summary_df <- cbind(summary_df, ordinal_data%>%group_by(id)%>%dplyr::summarise(max(dose)))
colnames(summary_df)[5]<- "dose"
summary_df$dose<- as.factor(summary_df$dose)
levels(summary_df$dose) <- c("Dose 1", "Dose 2", "Dose 3")
fit<- survfit2(Surv(time,event) ~ dose, data=summary_df)
median_df <- survminer::surv_median(fit)%>%
dplyr::select(strata, median) %>%
rename(Dose = strata,
`Median time \n to event` = median)
median_df[,1]<-c("Dose 1", "Dose 2", "Dose 3")
tbl_grob <- tableGrob(median_df, rows = NULL, theme = ttheme_default(
core = list(fg_params = list(cex = 0.7)),
colhead = list(fg_params = list(cex = 0.8, fontface = "bold"))
))
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations/for_paper")
pdf("Figure1.pdf", width=10, height=6)
ggsurvfit(fit, linewidth = 1.5) +
add_censor_mark() +
add_confidence_interval() +
scale_ggsurvfit() + add_risktable()+
scale_color_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
))+
scale_fill_manual(
values = c(
"Dose 1" = "#66C2A5",   # Dose level 1
"Dose 2" = "#8DA0CB",   # Dose level 2
"Dose 3" = "#FC8D62"    # Dose level 3
)) +
scale_y_continuous(
name = expression(
atop(
"Probability of first baseline-adjusted",
"Grade" >= 3 ~ " PRO-CTCAE score"
)
)
)+
annotation_custom(
tbl_grob,
xmin = -0.5, xmax = 1.75,  # x-position range for table
ymin = 0.05, ymax = 0.35  # y-position range for table
)
dev.off()
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/paper/optimise-ar/for_paper")
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations")
library(ggh4x)
#import dummy data
ordinal_data <- read.csv("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations/dummy_ordinal.csv")[,-1]
#create plot
ordinal_data$grade[is.na(ordinal_data$grade)]<- "Unreported"
n_pat <- ordinal_data %>%
filter(timepoint == 0, toxicity == 1) %>%
group_by(dose) %>%
summarise(n.pat = n())
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations")
library(ggh4x)
librray(tidyverse)
library(tidyverse)
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations")
library(ggh4x)
library(tidyverse)
#import dummy data
ordinal_data <- read.csv("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations/dummy_ordinal.csv")[,-1]
#create plot
ordinal_data$grade[is.na(ordinal_data$grade)]<- "Unreported"
n_pat <- ordinal_data %>%
filter(timepoint == 0, toxicity == 1) %>%
group_by(dose) %>%
summarise(n.pat = n())
prop<- ordinal_data%>%group_by(toxicity, timepoint, dose)%>%count(grade) %>%
left_join(n_pat, by = "dose") %>%
mutate(proportion = n / n.pat)%>%dplyr::select(-n)
colnames(prop)<- c("toxicity","timepoint", "dose","grade","n.pat", "proportion")
prop<- prop %>% dplyr::select(-n.pat)
missing_layer <- prop %>%
group_by(toxicity, timepoint, dose)%>%
summarise(proportion = 1 - sum(proportion), .groups = "drop") %>%
filter(proportion > 0)
missing_layer<- cbind(missing_layer, "Discontinued")
colnames(missing_layer)<-c("toxicity","timepoint","dose","proportion","grade")
missing_layer <- missing_layer %>%
dplyr::select(names(prop))
prop$grade<- as.character(prop$grade)
prop <- bind_rows(prop, missing_layer)
prop$toxicity<- as.factor(prop$toxicity)
prop$grade<- as.factor(prop$grade)
prop$dose<- as.factor(prop$dose)
prop$timepoint<- as.factor(prop$timepoint)
prop$dose <- factor(prop$dose, levels = c("1", "2", "3"))
prop$grade<- factor(prop$grade, levels = c("Discontinued", "Unreported", 5:1))
facet_labels<-c("1"="Dose 1 (N=10)", "2"="Dose 2 (N=10)", "3"="Dose 3 (N=10)")
#Final figure
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/paper/optimise-ar/for_paper")
pdf("Figure2A.pdf")
prop%>%filter(toxicity==2)%>%
ggplot(aes(x=as.factor(timepoint)))+
geom_bar(aes(x=as.factor(timepoint),y = proportion, fill = as.factor(grade)), stat = "identity", position = "stack")+
scale_fill_manual(values=rev(c("darkgreen", "lightgreen","yellow","orange", "red", "grey","grey30")), labels =rev(c("None", "Mild", "Moderate", "Severe", "Very Severe", "Unreported", "Discontinued")),
guide = guide_legend(reverse = TRUE))+
theme_bw(base_size=14) +
facet_wrap2(~as.factor(dose), nrow=3, strip.position = "left", axes="all", labeller = as_labeller(facet_labels))+
labs(x = "Timepoint",
y = "Proportion",
fill = "Severity")
dev.off()
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/paper/optimise-ar/for_paper")
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations")
#import dummy data
ordinal_data <- read.csv("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations/dummy_ordinal.csv")[,-1]
#create plot
ordinal_data<-ordinal_data%>%group_by(id)%>%
mutate(has_tp = any(timepoint == 7)) %>%
filter(timepoint %in% c(0, 7))%>%
pivot_wider(names_from = timepoint, values_from = grade, names_prefix = "tp_") %>%
mutate(grade_change = tp_7 - tp_0)%>%
mutate(base_adj = case_when(
has_tp == FALSE ~ "ICE" ,
TRUE ~  ifelse(grade_change>0, as.character(tp_7), as.character(1))))
ordinal_data$base_adj[is.na(ordinal_data$base_adj)==TRUE]<- "Unreported"
# Data Manipulation
#prop<- ordinal_data%>%group_by(toxicity,dose)%>%count(base_adj) %>%
#  mutate(proportion = n / n.pat)%>%dplyr::select(-n)
prop<- ordinal_data%>%group_by(toxicity,dose)%>%
count(base_adj)%>%
ungroup()%>%
mutate(original = TRUE)%>%
complete(toxicity, dose, base_adj, fill = list(n = 0))%>%
group_by(toxicity, dose) %>%
mutate(n.pat = sum(n[base_adj != "ICE"], na.rm=TRUE)) %>%
ungroup() %>%
mutate(proportion = n / n.pat)%>%dplyr::select(-n)
prop$toxicity<- as.factor(prop$toxicity)
prop$base_adj<- as.factor(prop$base_adj)
prop$dose<- as.factor(prop$dose)
levels(prop$base_adj) <- c(levels(prop$base_adj), "Unreported")
#Final figure
prop$dose <- factor(prop$dose, levels = rev(levels(prop$dose)))
prop<-prop%>%subset(base_adj != "ICE")
prop$base_adj <- factor(prop$base_adj, levels = c("Unreported",5,4,3,2,1))
facet_labels<- c("1"="Symptomatic Adverse Event 1","2"="Symptomatic Adverse Event 2", "3"="Symptomatic Adverse Event 3", "4"="Symptomatic Adverse Event 1", "5"="Symptomatic Adverse Event 2", "6"="Symptomatic Adverse Event 3", "7"="Symptomatic Adverse Event 7", "8"="Symptomatic Adverse Event 8", "9"="Symptomatic Adverse Event 9", "10"="Symptomatic Adverse Event 10")
ice_n_pat <- prop %>%
distinct(dose, n.pat)
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/paper/optimise-ar/for_paper")pdf("Figure3B.pdf", height=4, width=7)
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations")
#import dummy data
ordinal_data <- read.csv("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/emily-optimisear-generate-recommendations/dummy_ordinal.csv")[,-1]
#create plot
ordinal_data<-ordinal_data%>%group_by(id)%>%
mutate(has_tp = any(timepoint == 7)) %>%
filter(timepoint %in% c(0, 7))%>%
pivot_wider(names_from = timepoint, values_from = grade, names_prefix = "tp_") %>%
mutate(grade_change = tp_7 - tp_0)%>%
mutate(base_adj = case_when(
has_tp == FALSE ~ "ICE" ,
TRUE ~  ifelse(grade_change>0, as.character(tp_7), as.character(1))))
ordinal_data$base_adj[is.na(ordinal_data$base_adj)==TRUE]<- "Unreported"
# Data Manipulation
#prop<- ordinal_data%>%group_by(toxicity,dose)%>%count(base_adj) %>%
#  mutate(proportion = n / n.pat)%>%dplyr::select(-n)
prop<- ordinal_data%>%group_by(toxicity,dose)%>%
count(base_adj)%>%
ungroup()%>%
mutate(original = TRUE)%>%
complete(toxicity, dose, base_adj, fill = list(n = 0))%>%
group_by(toxicity, dose) %>%
mutate(n.pat = sum(n[base_adj != "ICE"], na.rm=TRUE)) %>%
ungroup() %>%
mutate(proportion = n / n.pat)%>%dplyr::select(-n)
prop$toxicity<- as.factor(prop$toxicity)
prop$base_adj<- as.factor(prop$base_adj)
prop$dose<- as.factor(prop$dose)
levels(prop$base_adj) <- c(levels(prop$base_adj), "Unreported")
#Final figure
prop$dose <- factor(prop$dose, levels = rev(levels(prop$dose)))
prop<-prop%>%subset(base_adj != "ICE")
prop$base_adj <- factor(prop$base_adj, levels = c("Unreported",5,4,3,2,1))
facet_labels<- c("1"="Symptomatic Adverse Event 1","2"="Symptomatic Adverse Event 2", "3"="Symptomatic Adverse Event 3", "4"="Symptomatic Adverse Event 1", "5"="Symptomatic Adverse Event 2", "6"="Symptomatic Adverse Event 3", "7"="Symptomatic Adverse Event 7", "8"="Symptomatic Adverse Event 8", "9"="Symptomatic Adverse Event 9", "10"="Symptomatic Adverse Event 10")
ice_n_pat <- prop %>%
distinct(dose, n.pat)
setwd("C:/Users/ealger/OneDrive - The Institute of Cancer Research/M/PhD/OPTIMISE-AR (PRO Guidance paper)/Aim 2/paper/optimise-ar/for_paper")
pdf("Figure3B.pdf", height=4, width=7)
prop%>%subset(toxicity %in% 4:6)%>% ggplot(aes(fill=base_adj,x=dose, y=proportion*100)) +
geom_bar(position="stack", stat="identity") + coord_flip()+
facet_grid(toxicity ~ .,scales = "free_y", labeller = as_labeller(facet_labels))+
scale_fill_manual(values=rev(c("darkgreen", "lightgreen","yellow","orange", "red", "darkgrey")), labels =rev(c("None", "Mild", "Moderate", "Severe", "Very Severe", "Unreported")),
guide = guide_legend(reverse = TRUE))+
labs(x = paste0("Dose (N=", paste(ice_n_pat$n.pat, collapse = "; "), ")"),
y = "Percentage (%)",
fill = "Severity")+
theme(
strip.text.y = element_text(angle = 0))
dev.off()
